package problema02;

public class Test2 {
    public static int findMaximumSum(int[] nums) {
        int maxSum = Integer.MIN_VALUE;
        int sum = 0;

        // faz para cada subarray começando com `i`
        for (int i = 0; i < nums.length; i++) {
            // calcula a soma do subarray `nums[i…j]`

            sum = 0; // reinicia a soma

            // faz para cada subarray terminando em `j`
            for (int j = i; j < nums.length; j++) {
                sum += nums[j];

                // se a soma do subarray atual for maior que o máximo
                // soma calculada até agora, atualiza a soma máxima
                if (sum > maxSum) {
                    maxSum = sum;
                    System.out.println(String.format("%d, %d", i, j));
                }
            }
        }

        return maxSum;
    }

    public static void main(String[] args) {
        int[] nums = { -2, -1, -4, -2, -4, -3, 1, -2, -3, 1, -2, -2, -4, -4, -2, -2, -4, -4, -3, 1, -2, -3, -2, -1, 1,
            -1, 0, 0, -3, -4, 0, -8, -6, -3, -3, -3, -8, -7, -7, -8, -3, -7, -3, -7, -3, -8, -7, -3, -7, -7, -7, -6,
            -6, -4, -6, -4, -7, -7, -5, -10, 4, 6, -1, -12, 1, 1, 5, 6, 2, 6, -3, -12, 0, -4, 0, 0, -7, -13, -8, 0,
            -13, 1, -10, -11, -6, 0, -4, -9, 5, 6, -14, -17, -14, -14, -12, -14, -14, -17, -15, -13, -17, -13, -17,
            -16, -12, -16, -14, -15, -16, -15, -15, -13, -14, -16, -14, -17, -13, -16, -15, -14, -13, -14, -18, -17,
            -15, -13, -19, -19, -16, -13, -18, -13, -16, -14, -13, -15, -15, -16, -13, -17, -14, -16, -15, -13, -16,
            -18, -19, -19, -16, -17, -15, -16, -16, -18, -20, -20, -19, -16, -19, -18, -17, -21, -19, -19, -20, -21,
            -19, -18, -16, -20, -19, -19, -18, -21, -17, -18, -21, -21, -20, -17, -19, -22, -23, -19, -22, -23, -23,
            -22, -20, -18, -20, -20, -18, -17, -23, -23, -18, -17, -20, -18, -22, -23, -19, -19, -19, -17, -18, -20,
            -20, -17, -20, -23, -20, -18, -18, -21, -17, -17, -17, -21, -17, -17, -21, -17, -19, -17, -18, -21, -18,
            -21, -19, -21, -18, -19, -22, -19, -21, -22, -17, -22, -22, -22, -17, -16, -21, -19, -19, -15, -17, -14,
            -18, -19, -19, -19, -19, -15, -14, -14, -14, -14, -16, -19, -21, -21, -20, -15, -19, -14, -15, -17, -16,
            -21, -20, -12, -14, -13, -15, -11, -12, -13, -11, -11, -14, -11, -16, -10, -14, -16, -13, -10, -16, -12,
            -13, -15, -12, -12, -14, -11, -13, -15, -12, -16, -13, -13, -11, -8, -10, -10, -7, -9, -6, -9, -7, -9,
            -6, -9, -10, -10, -8, -9, -8, -10, -11, -10, -9, -11, -6, -6, -11, -11, -9, -6, -6, -10, -4, -7, -4, -4,
            -1, -2, -7, -3, -4, -2, -3, -7, -5, -3, -1, -5, -1, -3, -5, -3, -1, -2, -3, -2, -6, -2, -1, -7, -5, -2,
            -3 };
        System.out.println("The maximum sum of the subarray is " + findMaximumSum(nums));
    }
}
